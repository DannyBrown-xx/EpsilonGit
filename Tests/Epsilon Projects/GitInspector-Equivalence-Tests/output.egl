<!DOCTYPE html>
<head>
	<title>GitInspector-style Statistics | EpsilonGit</title>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap-theme.min.css">
	<script src="http://code.jquery.com/jquery-2.1.4.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.js"></script>
	<script src="http://bebraw.github.io/Chart.js.legend/src/legend.js"></script>
	<script src="http://tablesorter.com/__jquery.tablesorter.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
	<style>
		canvas {
			display:block;
			margin:0 auto;
		}
		header {
			background:#57346a;
			color:#FFFFFF;
			padding:10px;
		}
		header h1 {padding:0px; margin:0px;}
		header p {color:#778899;}
		header a {color:#A9A9A9;}
		header img {float:left; margin-right:10px;}
		.color-sample {
			width:10px;
			height:10px;
			display:inline-block;
			margin-right:3px;
		}
		.title {
			margin-bottom:10px;
		}
	</style>
</head>
<body>
	<header>
		<img src="https://git-scm.com/images/logos/downloads/Git-Icon-White.png" width="60" height="60"/>
		<h1>Git Repository Statistics</h1>
		<p>This output has been generated by <a href="https://github.com/dannybrown/epsilongit">EpsilonGit</a>; the analysis and querying tool for git repositories</p>
	</header>
	<main>
		<section id="commit-information" class="container-fluid">
			<h2>Authors</h2>
			<p>The following historical commit information, by author, was found in the repository.</p>
			<div class="table-graph-container" class="row">
				<div class="col-md-8">
					<table id="commit-information-table" class="table table-striped table-bordered table-hover">
						<thead>
						  <tr>
						    <th>Author</th>
						    <th>Commits</th>
						    <th>Insertions</th>
						    <th>Deletions</th>
						    <th>&#37; of changes</th>
						  </tr>
						</thead>
						<tbody>
						[% for(author in Author.all.sortBy(a | a.getName())) { %]
							  <tr>
							    <td>[%= author.getName() %]</td>
							    <td></td>
							    <td></td>
							    <td></td>
							    <td></td>
							  </tr>
						[% } %]
						</tbody>
					</table>
				</div>
				<div class="col-md-4">
					<canvas id="commit-information-chart">
					</canvas>
					<div id="commit-information-chart-legend"></div>
				</div>
			</div>
		</section>
		<section id="code-survival-information" class="container-fluid">
			<h2>Code Survival</h2>
			<p>Below are the number of rows from each author that have survived and are still intact in the current revision.</p>
			<div class="table-graph-container" class="row">
				<div class="col-md-8">
					<table id="code-survival-table" class="table table-striped table-bordered table-hover">
						<thead>
						  <tr>
						    <th>Author</th>
						    <th>Rows</th>
						    <th>% in comments</th>
						  </tr>
						</thead>
						<tbody>
						[% for(author in Author.all.sortBy(a | a.getName())) { %]
							  <tr>
							    <td>[%= author.getName() %]</td>
							    <td>[%  %]</td>
							    <td>[%  %]</td>
							  </tr>
						[% } %]
						</tbody>
					</table>
				</div>
				<div class="col-md-4">
					<canvas id="code-survival-chart">
					</canvas>
					<div id="code-survival-chart-legend"></div>
				</div>
			</div>
		</section>
	</main>
	<script>
		$(document).ready(function() 
		    { 
				//Make both tables sortable by clicking each columns header.
		        $("#commit-information-table").tablesorter(); 
				$("#code-survival-table").tablesorter();
				
				var donutGraphOptions = []; //Keep defaults
				
				//First graph
				var numberCommitsDonutContext = $("#commit-information-chart").get(0).getContext("2d");
				var numberCommitsDonutChart = new Chart(numberCommitsDonutContext);
				var numberCommitsData = [
					[% for (author in Author.all) { %]
				    {
				        value: 423 + 123,
				        color:'#'+Math.floor(Math.random()*16777215).toString(16),
				        highlight: '#1A1A1A',
				        label: "[%= author.getName() %]"
				    },
				    [% } %]
				]
				
				numberCommitsDonutChart.Doughnut(numberCommitsData, donutGraphOptions);
				legend(document.getElementById("commit-information-chart-legend"), numberCommitsData, numberCommitsDonutChart);
				
				//Second graph
				var codeSurvivalDonutContext = $("#code-survival-chart").get(0).getContext("2d");
				var codeSurvivalDonutChart = new Chart(codeSurvivalDonutContext);
				
				//Clever colour generator code credit: http://www.paulirish.com/2009/random-hex-color-code-snippets/
				var codeSurvivalData = [
				    [% for (author in Author.all) { %]
				    {
				        value: 423 + 123,
				        color:'#'+Math.floor(Math.random()*16777215).toString(16),
				        highlight: '#1A1A1A',
				        label: "[%= author.getName() %]"
				    },
				    [% } %]
				]
				
				codeSurvivalDonutChart.Doughnut(codeSurvivalData, donutGraphOptions);
				legend(document.getElementById("code-survival-chart-legend"), codeSurvivalData, codeSurvivalDonutChart);
		    } 
		); 
	</script>
</body>
